function and(left, right)
{
    if (left && right)
    {
        return 1;
    }
    return 0;
}


function coalesce(value, replacementValue)
{
  if (isArrayType(value) && count(value) == 0)
  {
    return replacementValue;
  }
  if (isStringType(value) && value == "")
  {
      return replacementValue;
  }
  return value;
}

function degress(value)
{
  return cos(value * PI / 180.0);
}

function endsWith(source, text)
{
    if (right(source, count(text)) == text)
    {
        return 1;
    }
    return 0;
}


function fill(value, n)
{
  let output = "";
  let i = 0;
  while (i < n)
  {
      output += value;
      i = i + 1;
  }
  return output;
}

function first(value)
{
  if (count(value) > 0)
  {
      return value[0];
  }
  return "";
}


function isBlank(value)
{
  if (isArrayType(value) && count(value) == 0)
  {
    return 1;
  }
  if (isStringType(value) && value == "")
  {
      return 1;
  }
  return 0;
}

function last(value)
{
    let size = count(value);
    if (size > 0)
    {
        return value[size-1];
    }
    return "";
}

function or(left, right)
{
    if (left || right)
    {
        return 1;
    }
    return 0;
}

function proper(value)
{
    if (!isStringType(value))
    {
        return value;
    }
    let i = 1;
    let size = count(value);
    let output = "";
    output += toUpper(value[0]);
    while (i < size)
    {
        output += value[i];
        i++;
    }
    return output;
}

function radians(value)
{
  return tan(value * PI / 180.0);
}

function reverse(value)
{
    if (isArrayType(value))
    {
      return value;
    }

    let output = "";
    let i = count(value)-1;
    while (i >= 0)
    {
        output += value[i];
        i--;
    }
    return output;
}

function startsWith(source, text)
{
    if (left(source, count(text)) == text)
    {
        return 1;
    }
    return 0;
}
